!function(){"use strict";function e(e,o){var t=[],i=[],n=function(){var i=o.defer();return e.get("api/movies").then(function(e){angular.copy(e.data,t),i.resolve()},function(){i.reject()}),i.promise},r=function(i){var n=o.defer();return e.post("api/movies",i).then(function(e){var o=e.data;t.splice(0,0,o),n.resolve(o)},function(){n.reject()}),n.promise},l=function(t){var i=o.defer();return e.get("api/movies/"+t).then(function(e){i.resolve(e.data)},function(){i.reject()}),i.promise},s=function(t){var i=o.defer();return e.put("api/Movies/",t).then(function(){i.resolve()},function(){i.reject()}),i.promise},c=function(t){var i=o.defer();return e["delete"]("api/Movies/"+t).then(function(){i.resolve()},function(){i.reject()}),i.promise},u=function(e){var t=o.defer();return a(e).then(function(){i?t.resolve(i):t.reject()},function(){t.reject()}),t.promise},a=function(t){var n=o.defer();return e.get("api/MovieReviews/"+t).then(function(e){angular.copy(e.data,i),n.resolve()},function(){n.reject()}),n.promise},v=function(t,i){var n=o.defer();return e.post("/api/MovieReviews/"+t,i).then(function(){n.resolve()},function(){n.reject()}),n.promise},f=function(t){var i=o.defer();return e.get("api/Lookups/getbyreviewerid?id="+t).then(function(e){i.resolve(e.data)},function(){i.reject()}),i.promise},d=function(t){var i=o.defer();return e.put("api/MovieReviews/",t).then(function(){i.resolve()},function(){i.reject()}),i.promise},m=function(t){var i=o.defer();return e["delete"]("/api/MovieReviews/"+t).then(function(){i.resolve()},function(){i.reject()}),i.promise};return{movies:t,reviews:i,getMovies:n,addMovie:r,getMovieById:l,movieEdit:s,removeMovie:c,getReviewById:u,getReviews:a,addReview:v,getReviewByReviewerId:f,updateReview:d,removeReview:m}}angular.module("moviesApp").factory("movieDataService",e)}(),function(){"use strict";function e(e,o,t){e.reviews=t,$("#loader").show(),setTimeout(function(){t.getReviews().then(function(o){e.reviews=o,toastr.success("Reviews retrieved Successfully")},function(){toastr.error("Error in Fetching Reviews")})["finally"](function(){$("#loader").hide()})},1e3)}angular.module("moviesApp").controller("allReviewsController",e)}(),function(){"use strict";angular.module("moviesApp",["ngRoute","angularUtils.directives.dirPagination"]).config(function(e){e.when("/",{controller:"moviesController",templateUrl:"templates/homeView.html"}),e.when("/movies",{controller:"moviesListController",templateUrl:"templates/moviesView.html"}),e.when("/newMovie",{controller:"newMovieController",templateUrl:"templates/newMovieView.html"}),e.when("/editMovie/:Id",{controller:"editMovieController",templateUrl:"templates/editMovieView.html"}),e.when("/deleteMovie/:Id",{controller:"deleteMovieController"}),e.when("/reviews/:Id",{controller:"reviewsController",templateUrl:"/templates/reviewsView.html"}),e.when("/newReview/:Id",{controller:"newReviewController",templateUrl:"/templates/newReviewView.html"}),e.when("/editReview/:Id",{controller:"editReviewController",templateUrl:"/templates/editReviewView.html"}),e.otherwise({templateUrl:"templates/errorView.html"})})}(),function(e){e.isLocale=!0,e.log=function(o){e.isLocale&&console.log(o)}}(window.myapp=window.myapp||{}),function(){"use strict";function e(e,o){e.deleteMovie=function(){bootbox.confirm({size:"small",message:"Are you sure?",callback:function(e){e&&o.removeMovie(Id).then(function(){toastr.success("Movie Deleted Successfully!"),$window.location="#/"},function(e){toastr.error("Error Deleting Movie!")})}})}}angular.module("moviesApp").controller("deleteMovieController",e)}(),function(){"use strict";function e(e,o,t,i){e.movie=null,e.MovieId=null,i.getMovieById(t.Id).then(function(o){e.movie=o},function(){toastr.error("Error Fetching Movie with Id:",+t.Id)}),setTimeout(function(){e.editMovie=function(){$("#loader").show(),i.movieEdit(e.movie).then(function(){toastr.success("Movie Updated Successfully!"),o.location="#/movies"},function(){toastr.error("Error in Updating Movie")}).then(function(){$("#loader").hide()})}},1e3)}angular.module("moviesApp").controller("editMovieController",e)}(),function(){"use strict";function e(e,o,t,i){$("#loader").show(),setTimeout(function(){i.getReviewByReviewerId(o.Id).then(function(o){e.review=o},function(){toastr.error("Unable to Fetch the review")})["finally"](function(){$("#loader").hide()})},1e3),setTimeout(function(){e.editReview=function(){$("#loader1").show(),i.updateReview(e.review).then(function(){toastr.success("Review edited Successfully"),t.location="#/movies"},function(){toastr.error("Error in editing the Review")})["finally"](function(){$("#loader1").hide()})}},1e3)}angular.module("moviesApp").controller("editReviewController",e)}(),function(){"use strict";function e(e,o){e.heading="Movie Reviews App",e.data=o,$("#loader").show(),setTimeout(function(){o.getMovies().then(function(){console.log(e.data),toastr.success("Movies Fetched Successfully")},function(){toastr.error("Error in fetching movies")})["finally"](function(){$("#loader").hide()})},1e3)}angular.module("moviesApp").controller("moviesController",e)}(),function(){"use strict";function e(e,o,t,i){e.heading="Movie Reviews App",e.data=o,e.canRemove=i,$("#loader").show(),setTimeout(function(){o.getMovies().then(function(){toastr.success("Movies Fetched Successfully")},function(){toastr.error("Error in fetching movies")})["finally"](function(){$("#loader").hide()})},1e3),e.deleteMovie=function(e){bootbox.confirm({size:"medium",message:"Are you sure ?",callback:function(i){i&&o.removeMovie(e).then(function(){toastr.success("Movie Deleted Successfully!"),t.location="#/"},function(e){toastr.error("Error Deleting Movie!")})}})}}angular.module("moviesApp").controller("moviesListController",e)}(),function(){"use strict";function e(e,o,t){e.newMovie={},setTimeout(function(){e.save=function(){$("#loader").show(),o.addMovie(e.newMovie).then(function(){toastr.success("Movie Saved Successfully"),t.location="#/movies"},function(){toastr.error("Error in saving Movie")}).then(function(){$("#loader").hide()})}},1e3)}angular.module("moviesApp").controller("newMovieController",e)}(),function(){"use strict";function e(e,o,t,i){e.ReviewerRating=3,e.max=5,e.isReadonly=!1,e.MovieId=null,e.newReview={},e.cancelReview=function(){t.history.back()},e.saveReview=function(){i.addReview(o.Id,e.newReview).then(function(){toastr.success("Thanks for your feedback!"),t.location="#/movies"},function(){toastr.error("Couldn't Save the New Review")})}}angular.module("moviesApp").controller("newReviewController",e)}(),function(){"use strict";function e(e,o,t,i,n){e.reviews=null,e.MovieId=null,e.canRemove=n,$("#loader").show(),setTimeout(function(){i.getReviewById(o.Id).then(function(t){e.reviews=t,e.MovieId=o.Id,toastr.success("Reviews retrieved Successfully")},function(){toastr.error("Error in Fetching Reviews")})["finally"](function(){$("#loader").hide()})},1e3),e.deleteReview=function(e){bootbox.confirm({size:"medium",message:"Are you sure ?",callback:function(o){o&&i.removeReview(e).then(function(){toastr.success("Review Deleted Successfully!"),t.location="#/movies"},function(e){toastr.error("Error Deleting Movie!")})}})}}angular.module("moviesApp").controller("reviewsController",e)}();